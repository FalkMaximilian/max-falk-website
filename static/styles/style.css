html,
body {
    /* min-height: 100vh; */
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-height: 100%;
}

.bi {
    display: inline-block;
    vertical-align: -.125em;
    fill: currentColor;
}

.custom-shape-divider-top-1698420714 {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
}

.custom-shape-divider-top-1698420714 svg {
    position: relative;
    display: block;
    width: calc(124% + 1.3px);
    height: 93px;
}

.custom-shape-divider-top-1698420714 .shape-fill {
    fill: #212529;
}


.glow-card {
    -webkit-box-shadow: 0px 0px 70px 4px rgba(46, 130, 255, 0.4);
    -moz-box-shadow: 0px 0px 70px 4px rgba(46, 130, 255, 0.4);
    box-shadow: 0px 0px 70px 4px rgba(46, 130, 255, 0.4);
}

.mybox {
    position: relative;
    height: fit-content;
}

/* setting padding based on even or odd */
.mybox:nth-child(odd) {
    padding: 30px 0 30px 30px;
}

.mybox:nth-child(even) {
    padding: 30px 30px 30px 0;
}

/* Global ::before */
.mybox::before {
    content: "";
    position: absolute;
    width: 50%;
    border: solid #fa7268;
    /* border: solid #fe019a; */
    /* border: solid #0d6efd; */
}

/* Setting the border of top, bottom, left */
.mybox:nth-child(odd)::before {
    left: 0px;
    top: -5px;
    bottom: -5px;
    width: 40%;
    border-width: 5px 0 5px 5px;
    border-radius: 50px 0 0 50px;
}

/* Setting the border of top, bottom, right */
.mybox:nth-child(even)::before {
    right: 0;
    top: 0;
    bottom: 0;
    width: 60%;
    border-width: 5px 5px 5px 0;
    border-radius: 0 50px 50px 0;
}


/* Removing the border if it is the first card */
.mybox:first-child::before {
    border-top-width: 30%;
    /* border-top: 0; */
    /* border-top-left-radius: 0; */
}

/* Removing the border if it is the last card  and it's odd */
.mybox:last-child:nth-child(odd)::before {
    border-bottom: 0;
    border-bottom-left-radius: 0;
}

/* Removing the border if it is the last card  and it's even */
.mybox:last-child:nth-child(even)::before {
    border-bottom: 0;
    border-bottom-right-radius: 0;
}

.mybox:nth-child(even)>h1 {
    text-align: right;
}

.mybox:nth-child(even)>h2 {
    text-align: right;
}

.mybox:nth-child(even)>p {
    text-align: right;
}

.mybox:nth-child(odd) {
    padding-right: 0px;
    padding-left: 48px;
}

.mybox:nth-child(even) {
    padding-right: 48px;
    padding-left: 0px;
}

.pseudo-line {
    position: relative;
    padding-bottom: 50px;
}

.pseudo-line::after {
    content: "";
    display: block;
    position: absolute;
    left: 17%;
    height: 50px;
    width: 33%;
    border-right: 5px solid #fa7268;
    border-bottom: 5px solid #fa7268;
    border-bottom-right-radius: 25px;
}
@media (max-width: 399px) {
    #offcanvasResponsive {
        border-right-color: rgb(33, 37, 41);
    }
}

@media (min-width: 992px) {
    .sidebar-layout {
        display: grid;
        grid-template-areas: 'sidebar main';
        grid-template-columns: 1fr 6fr;
    }

    #sidebar {
        border-right-color: rgba(255, 255, 255, 0.15);
        border-right-width: 1px;
        border-right-style: solid;
        width: 380px;
    }
}

.icon {
    height: 28px;
    width: 28px;
    mask-size: cover;
}

.task-container {
    text-decoration: none;
}

.task-container > .icon {
    mask: url(../images/circle.svg);
    mask-size: cover;
    background-color: white;
    min-width: 24px;
    width: 24px;
    height: 24px;
}

.checked {
    text-decoration: line-through;
}

.checked > .icon {
    mask: url(../images/check-circle-fill.svg);
    mask-size: cover;
    background-color: lightseagreen;
    min-width: 24px;
    width: 24px;
    height: 24px;
}